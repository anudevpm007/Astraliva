{"ast":null,"code":"const valid = (data, identifier) => {\n  var k = 1;\n  let len = data.length;\n  let error = \"\";\n  console.log(len);\n  var j = 0;\n  if (identifier === 0) {\n    if (len <= 256 && len >= 0) {\n      while (k === 1) {\n        if (len >= j) {\n          if (data[j] === \"@\") {\n            if (len >= j) {\n              while (k === 1) {\n                if (len >= j) {\n                  console.log(data[j]);\n                  if (data[j] === \".\") {\n                    if (len > j + 1) {\n                      console.log(\"varified\");\n                      k = 0;\n                    } else {\n                      error = \"230\";\n                      console.log(\"domain not found code: \" + error);\n                      k = 0;\n                    }\n                  } else {\n                    j = j + 1;\n                    error = \"300\";\n                    console.log(\"error . found not found code: \" + error);\n                    if (len === j) {\n                      k = 0;\n                    }\n                  }\n                } else {\n                  error = \"504\";\n                  console.log(\"after @ length not found error code: \" + error);\n                  if (len === j) {\n                    k = 0;\n                  }\n                }\n              }\n            } else {\n              k = 0;\n              error = \"604\";\n              console.log(\"after @ length error code: \" + error);\n            }\n          }\n        } else {\n          error = \"704\";\n          console.log(\"@ found error code: \" + error);\n          k = 0;\n        }\n        j = j + 1;\n      }\n    } else {\n      error = \"875\";\n      console.log(\"Length code: \" + error);\n    }\n  }\n  // if (identifier === 1) {\n  //     let len = data.length;\n  //     console.log(\"pass 2\"+len);\n  //     let j = 0;\n  //     let k = 0;\n  //     if (len >= 8) {\n  //         while (k === 0) {\n  //             if (!isNaN(Number(data[j]))) {\n  //                 console.log(\" pass okay \"+j)\n  //                 j = j + 1\n  //                 if (len === j) {\n  //                     k = 1;\n  //                 }\n  //             } else {\n  //                 j = j + 1\n  //                 console.log(Number(data[j]))\n  //                 if (len === j) {\n  //                     k = 1;\n  //                 }\n  //             }\n  //         }\n  //     }\n  // }\n};\nexport default valid;","map":{"version":3,"names":["valid","data","identifier","k","len","length","error","console","log","j"],"sources":["C:/Users/anude/Desktop/GitHub/Astraliva/src/test/validation.js"],"sourcesContent":["const valid = (data, identifier) => {\n    var k = 1;\n    let len = data.length;\n    let error = \"\";\n    console.log(len)\n    var j = 0;\n    if (identifier === 0) {\n        if (len <= 256 && len >= 0) {\n            while (k === 1) {\n                if (len >= j) {\n                    if (data[j] === \"@\") {\n                        if (len >= j) {\n                            while (k === 1) {\n                                if (len >= j) {\n                                    console.log(data[j])\n                                    if (data[j] === \".\") {\n                                        if (len > j + 1) {\n                                            console.log(\"varified\");\n                                            k = 0;\n                                        } else {\n                                            error = \"230\"\n                                            console.log(\"domain not found code: \" + error);\n                                            k = 0;\n                                        }\n                                    } else {\n                                        j = j + 1;\n                                        error = \"300\"\n                                        console.log(\"error . found not found code: \" + error);\n                                        if (len === j) {\n                                            k = 0;\n                                        }\n                                    }\n                                }\n                                else {\n                                    error = \"504\"\n                                    console.log(\"after @ length not found error code: \" + error);\n                                    if (len === j) {\n                                        k = 0;\n                                    }\n                                }\n                            }\n\n                        } else {\n                            k = 0;\n                            error = \"604\"\n                            console.log(\"after @ length error code: \" + error);\n                        }\n                    }\n                } else {\n                    error = \"704\"\n                    console.log(\"@ found error code: \" + error);\n                    k = 0;\n                }\n                j = j + 1;\n            }\n        } else {\n            error = \"875\"\n            console.log(\"Length code: \" + error)\n        }\n\n    }\n    // if (identifier === 1) {\n    //     let len = data.length;\n    //     console.log(\"pass 2\"+len);\n    //     let j = 0;\n    //     let k = 0;\n    //     if (len >= 8) {\n    //         while (k === 0) {\n    //             if (!isNaN(Number(data[j]))) {\n    //                 console.log(\" pass okay \"+j)\n    //                 j = j + 1\n    //                 if (len === j) {\n    //                     k = 1;\n    //                 }\n    //             } else {\n    //                 j = j + 1\n    //                 console.log(Number(data[j]))\n    //                 if (len === j) {\n    //                     k = 1;\n    //                 }\n    //             }\n    //         }\n    //     }\n    // }\n\n}\n\nexport default valid;"],"mappings":"AAAA,MAAMA,KAAK,GAAGA,CAACC,IAAI,EAAEC,UAAU,KAAK;EAChC,IAAIC,CAAC,GAAG,CAAC;EACT,IAAIC,GAAG,GAAGH,IAAI,CAACI,MAAM;EACrB,IAAIC,KAAK,GAAG,EAAE;EACdC,OAAO,CAACC,GAAG,CAACJ,GAAG,CAAC;EAChB,IAAIK,CAAC,GAAG,CAAC;EACT,IAAIP,UAAU,KAAK,CAAC,EAAE;IAClB,IAAIE,GAAG,IAAI,GAAG,IAAIA,GAAG,IAAI,CAAC,EAAE;MACxB,OAAOD,CAAC,KAAK,CAAC,EAAE;QACZ,IAAIC,GAAG,IAAIK,CAAC,EAAE;UACV,IAAIR,IAAI,CAACQ,CAAC,CAAC,KAAK,GAAG,EAAE;YACjB,IAAIL,GAAG,IAAIK,CAAC,EAAE;cACV,OAAON,CAAC,KAAK,CAAC,EAAE;gBACZ,IAAIC,GAAG,IAAIK,CAAC,EAAE;kBACVF,OAAO,CAACC,GAAG,CAACP,IAAI,CAACQ,CAAC,CAAC,CAAC;kBACpB,IAAIR,IAAI,CAACQ,CAAC,CAAC,KAAK,GAAG,EAAE;oBACjB,IAAIL,GAAG,GAAGK,CAAC,GAAG,CAAC,EAAE;sBACbF,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;sBACvBL,CAAC,GAAG,CAAC;oBACT,CAAC,MAAM;sBACHG,KAAK,GAAG,KAAK;sBACbC,OAAO,CAACC,GAAG,CAAC,yBAAyB,GAAGF,KAAK,CAAC;sBAC9CH,CAAC,GAAG,CAAC;oBACT;kBACJ,CAAC,MAAM;oBACHM,CAAC,GAAGA,CAAC,GAAG,CAAC;oBACTH,KAAK,GAAG,KAAK;oBACbC,OAAO,CAACC,GAAG,CAAC,gCAAgC,GAAGF,KAAK,CAAC;oBACrD,IAAIF,GAAG,KAAKK,CAAC,EAAE;sBACXN,CAAC,GAAG,CAAC;oBACT;kBACJ;gBACJ,CAAC,MACI;kBACDG,KAAK,GAAG,KAAK;kBACbC,OAAO,CAACC,GAAG,CAAC,uCAAuC,GAAGF,KAAK,CAAC;kBAC5D,IAAIF,GAAG,KAAKK,CAAC,EAAE;oBACXN,CAAC,GAAG,CAAC;kBACT;gBACJ;cACJ;YAEJ,CAAC,MAAM;cACHA,CAAC,GAAG,CAAC;cACLG,KAAK,GAAG,KAAK;cACbC,OAAO,CAACC,GAAG,CAAC,6BAA6B,GAAGF,KAAK,CAAC;YACtD;UACJ;QACJ,CAAC,MAAM;UACHA,KAAK,GAAG,KAAK;UACbC,OAAO,CAACC,GAAG,CAAC,sBAAsB,GAAGF,KAAK,CAAC;UAC3CH,CAAC,GAAG,CAAC;QACT;QACAM,CAAC,GAAGA,CAAC,GAAG,CAAC;MACb;IACJ,CAAC,MAAM;MACHH,KAAK,GAAG,KAAK;MACbC,OAAO,CAACC,GAAG,CAAC,eAAe,GAAGF,KAAK,CAAC;IACxC;EAEJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAEJ,CAAC;AAED,eAAeN,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}